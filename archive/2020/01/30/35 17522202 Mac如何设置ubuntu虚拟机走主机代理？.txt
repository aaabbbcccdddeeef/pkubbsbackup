#t 35 17522202 XiaoNi 2020-01-30 00:13:00 XiaoNi 2020-01-31 16:52:00
Mac如何设置ubuntu虚拟机走主机代理？

#p 21780676 XiaoNi \varnothing 2020-01-30 13:15:21
Parallels Desktop装的ubuntu虚拟机，主机Macos已经用ss代理。打算让ubuntu也用ss代理。但是小白弄了一天也没设置成功，所以打算直接让ubuntu走主机的ss，请问这样可行吗？可以的话麻烦告诉我怎么操作，十分感谢。

#p 21780733 hiaoxui 小辉 2020-01-30 13:37:27
这应该不是一个简单的问题...
我的解决方案是再开一台虚拟机当路由器, 用 REDSOCKS 把  PREROUTING 的包交给 SS 代理.
如果没有太变态的需求的话, 可以考虑直接在 ubuntu 上运行 ss, 应该是更简洁的解决方案.
#quote XiaoNi

#p 21780930 XiaoNi \varnothing 2020-01-30 14:38:16
怎么在ubuntu上直接运行ss？
我的操作一：1.下载安装ss-qt；2.填写配置（直接由二维码导入，在mac端测试过节点有效）；3.连接。
结果：失败。
我的操作二：1:用命令行安装ss; 2.在/etc文件夹导入配置shadowsock.json；3.用命令行sudo ssserver -c /etc/shadowsocks.json -d start启动；4.用命令行sudo systemctl status rc-local.service检测。
结果：显示inactive(dead)
请问我这两种方法的哪几步错了ಥ_ಥ
#quote hiaoxui

#p 21781139 dingbur dingbur 2020-01-30 15:39:48
ubuntu直接运行ss肯定是最简单的方法。
单说你的方法2，我不是ubuntu用户，不太清楚ubuntu的配置细节。但是如果你手动运行ssserver，那就不能用systemctl去查它的状态，直接ps aux | grep ssserver看看有没有对应进程就行。在调试的时候可以把参数-d start去掉在前台运行，看看log有没有问题。确认没有问题以后再加上-d start后台启动或者直接用systemd管理。
#quote XiaoNi

#p 21781500 gspku null 2020-01-30 17:47:00


2020-01-30 17:30:08
先说一下操作二里的错误：
rc-local.service是开机一次性执行性质的系统服务，执行完自然会退出进入inactive状态，是正常现象。
sudo ssserver -c /etc/shadowsocks.json -d start命令的作用是启动ss服务器并且在后台运行，并不会自动设置开机自启，和rc.local没有任何关系。自然用systemctl无法检查它的状态。而且你这里不应该用ssserver，客户端应该用sslocal才对。
操作一（使用ss-qt）应该是正确的
“失败”具体指什么情况？ 是指程序不走SS吗？
Linux里的ss是没有全局代理功能的（不准确，暂且这么理解）。也就是说，单纯启动ss之后，各种程序是不走SS的。需要设置程序使用SOCKS5代理（地址127.0.0.1，端口是ss里设置的本地端口），才能走SS。
Chrome和Firefox浏览器可以使用SwitchyOmega扩展来实现自动切换代理的功能。
关于这些问题的解决方法，目前网上还是较容易找到的，就算是使用不靠谱的百度搜索“ss-qt”，也能搜到一些有用的解答。
#quote XiaoNi

#p 21781537 XiaoNi \varnothing 2020-01-30 17:51:18
第二种我看不懂了:)，那先说第一种吧：
我说的失败是指firefox无法访问外网，其他程序暂时没有试过。
另外“设置程序使用SOCK5代理”具体应该怎么操作？
设置成功之后Firefox还需要使用那个拓展吗？
其他程序（如邮箱）应该怎么做才能访问外网？
谢谢回答🐶
#quote gspku

#p 21781585 gspku null 2020-01-30 18:03:09


2020-01-30 18:01:01
就是在你要走SS的程序的设置里，找到“使用代理服务器”的相关设置，设置代理类型为SOCKS5，地址为127.0.0.1，端口为SS客户端里设置的本地端口（不是远程端口），经过这样设置的程序才会走SS。不同软件的操作方法不一样，而且不是所有程序都能用（比如命令行软件一般就不方便设置或不能设置），但是一般的图形界面的浏览器和邮件客户端都是支持的。
上述说的是手动设置代理的方法，比较繁琐，而且设置之后只能全部流量走代理，不方便。而SwitchyOmega是Firefox和Chrome浏览器都支持的一种扩展，可以实现更方便的代理切换（其中Firefox可直接安装，Chrome需要先全局FQ才能安装）。使用方法百度都可以搜到。
如果使用SwitchyOmega的话，就不需要像上面那样手动设置SOCKS5代理了，只需要在扩展里面设置。对于Firefox推荐使用SwitchyOmega而不是手动设置。
另外还有一个进阶操作，对于命令行的情况，可以使用proxychains这个小工具让几乎任意的命令行软件使用代理。
#quote XiaoNi

#p 21781602 XiaoNi \varnothing 2020-01-30 18:04:13
谢谢，我再试试∠( ᐛ 」∠)＿
#quote gspku

#p 21781771 vimacs Lisp Interaction Paredit AC 2020-01-30 18:59:13
shadowsocks客户端程序的名字是sslocal而不是ssserver.
systemctl是配服务的，配置文件也不需要放到/etc下，你应该先运行sslocal测一下代理能不能用，再考虑配置成服务。
#quote XiaoNi

#p 21783213 hiaoxui 小辉 2020-01-31 02:32:27
ss-qt 只能在本地 1080 端口 (这是默认设置) 给你开一个 ss 的服务, 你的程序需要主动把自己代理到 socks5://127.0.0.1:1080 才行. 大部分情况下你应该是需要翻墙浏览网页, 所以你下载一些浏览器插件 (比如 switchyomega), 然后把浏览器插件代理到上述地址就可以了.
如果你不想或者因为不能翻墙所以没法下载浏览器插件, 可以考虑修改 ubuntu 的系统设置里的 proxy 选项, 把它代理到 socks5://127.0.0.1:1080. 但是我不是很清楚这个系统代理都负责一些什么任务, 不过至少浏览器是被代理的.
如果你想在命令行代理, 你可以用 proxychains 之类的代理软件代理到 ss, 这是最简单的方案.
如果你想彻底代理自己的虚拟机, 还是得从网卡下手. 这种情况下你要学的东西就太多了.
另外 ssserver 是用来建立 ss 服务器的, sslocal 才是客户端.
#quote XiaoNi

#p 21783215 hiaoxui 小辉 2020-01-31 02:34:38
我可以帮助提供一下 chrome 的浏览器插件:
[https://hiaoxui.com/f/switchyomega/4bbjd9p4](jump-to.php?url=https%3A%2F%2Fhiaoxui.com%2Ff%2Fswitchyomega%2F4bbjd9p4)
因为你下载这个插件可能需要翻墙. 这个压缩包里已经包含了我写好的一个配置备份, 你直接导入就能用.
你可以去 google 一下这个插件怎么用. 注意一定要配合 ss 使用.
#quote XiaoNi

#p 21783629 XiaoNi \varnothing 2020-01-31 09:04:04
哇成功了！原来是因为我没下这个插件( ･᷄ὢ･᷅ )
请问其他程序有类似的东西吗？我的邮箱什么的还是登不上去∠( ᐛ 」∠)＿
#quote hiaoxui

#p 21783652 hiaoxui 小辉 2020-01-31 09:10:31
应该每个软件都要单独代理. 我想你说的可能是 evolution? Evolution 内部自带代理设置, 在 preferences -&gt; Network Preferences -&gt; Default Proxy Settings. 用 socks5 127.0.0.1 和 1080 端口就可以了.
或者你可以在桌面设置里开启桌面级别的代理设置, 和 evolution 同理.
#quote XiaoNi

#p 21783696 XiaoNi \varnothing 2020-01-31 09:25:25
失败🏳️。我等下试试v2ray的vmess算了，听说这个可以全局。
多谢指导(´･ω･`)
#quote hiaoxui

#p 21784934 RyanBern r.bern 2020-01-31 13:55:53
分享一下自己在 ubuntu 上 fq 的解决方案吧，用了好几年了没出啥问题。楼主的 ubuntu 在虚拟机内，在虚拟机网络正确配置的条件下，在虚拟机内配置 ss 和在 linux host 上直接配置的过程是一样的。
**注：配置前请关闭或卸载之前安装过的其它客户端。**
**一、客户端准备**
看楼上大多讨论的是 ssserver/sslocal，这个是 shadowsocks-python 里的命令。现在使用 shadowsocks-libev (ss-libev) 可能更好一些（命令是 ss-server/ss-local，中间带个 - ），之前看到 shadowsocks-qt5 已经停止支持了。
ss-libev 的安装方式见 [https://github.com/shadowsocks/shadowsocks-libev](jump-to.php?url=https%3A%2F%2Fgithub.com%2Fshadowsocks%2Fshadowsocks-libev)，高版本的 ubuntu 可直接从源安装。
sudo apt install shadowsocks-libev
安装完毕后，系统会创建个新目录 /etc/shadowsocks-libev，里面有一个示例配置文件 config.json。将这个文件复制一份（示例：1.json）。
cd /etc/shadowsocks-libevsudo cp config.json 1.json
编辑 1.json，填写你自己的服务器配置（地址，服务器端口，加密方式，密码等）。
最后一步是启动服务
sudo systemctl start shadowsocks-libev-local@1sudo systemctl enable shadowsocks-libev-local@1
这里 1 对应的就是 1.json，如果使用了其它名称请换成相应的文件名。
可用 systemctl status shadowsocks-libev-local@1 来检查服务是否正常启动。
**二、程序配置（firefox）**
ubuntu 上的全局代理配置不太好用，我的方案还是具体到每个应用上。以 firefox 为例，选择 Preferences -&gt; General，拉到最下面的 Network Settings ，进入后会看到代理配置。我自己常用的是 pac 模式 (Automatic proxy configuration url)。
使用 pac 模式需要 pac 文件，这个是用程序生成的，推荐用 gfwlist2pac。为此先去 github 下载 gfwlist：[https://github.com/gfwlist/gfwlist](jump-to.php?url=https%3A%2F%2Fgithub.com%2Fgfwlist%2Fgfwlist) 
之后下载  gfwlist2pac 程序：
sudo apt install python-pippip install gfwlist2pac --user
注意 gfwlist2pac 是基于 python2 编写的，不兼容 python3。
生成 pac 文件的命令是：
gfwlist2pac -i gfwlist.txt -f proxy.pac -p "SOCKS5 127.0.0.1:1080"
这里 SOCKS5 127.0.0.1:1080 是你的 ss-local 代理地址和端口，如果使用了别的端口需要做相应调整。
生成 pac 文件之后，在 firefox 配置的 Automatic proxy configuration url 中输入 pac 文件的位置。例：file:///home/user/proxy.pac。
并勾选下方的 proxy dns using socks5，最后重启 firefox 即可生效。
注意：pac 规则是根据 gfwlist 生成的，因此这个文件要定期更新。某些被墙的地址可能没被 gfwlist 收录，这时候需要在 Network Settings 中选择 Manual 模式强行 fq。
**三、其它程序配置**
一般需要联网的程序都有独立的代理设置区域，例如：Dropbox：Prefercence -&gt; Proxies
命令行 fq 可用 proxychains 小工具（楼上大佬已经提到了）
安装：
sudo apt install proxychains4
修改 /etc/proxychains.conf 后，使用方式是在所有需要过代理的命令前打个 proxychains4
proxychains4 curl https://www.baidu.com
最后注意：启动客户端和应用过代理是两个独立步骤，需要根据具体情况来配置。
#quote XiaoNi

#p 21785580 XiaoNi \varnothing 2020-01-31 16:52:05
不胜感激！待我细细拜读(｡･ω･｡)ﾉ
#quote RyanBern

