#t 35 17649015 hiaoxui 2020-05-01 00:14:00 jacobanach 2020-05-03 11:06:00
白名单防火墙可以有效对抗 GFW 的主动探测

#p 22323467 hiaoxui 小辉 2020-05-01 14:25:08
**摘要**
GFW 会通过主动探测来识别运行 Shadowsocks 的服务器. 我们通过实验再次验证了这一结论, 同时我们提供了一种简单且有效的对抗策略: 在服务器端设置白名单防火墙. 实验证明我们的策略有效延长了服务器的生存时间, 而且并不会影响用户的使用体验.
**介绍**
GFW 的工作原理非常复杂, 但总体而言可以划分为两个步骤, 被动的嗅探和主动的探测. 前者是墙抓取数据包分析流量特征, 从而识别翻墙流量. 后者是主动向翻墙服务器发出探测数据包, 以主动探测来抓取特征并识别翻墙服务器. 目前流行的翻墙软件 (如 Shadowsocks, V2RAy 等) 以防御被动检测为主, 并不能很好地防御主动探测. 一些翻墙软件 (如 ShadowsocksR) 设计了对抗重放攻击的模块 (如使用 nonce), 但实践中运行 ShadowsocksR 的服务器同样会被封禁.
我们猜测 GFW 的工作策略是: 以被动探测筛选服务器, 再以主动探测的结果作为封禁的依据. 这样, 只要我们能够对抗墙的主动探测, 就能够让服务器生存下来. 我们没有针对墙主动探测方式设计防御策略, 而是以源 IP 地址作为依据, Drop 所有的入站数据包, 只保留用户的数据包, 即白名单防火墙策略. 对比不使用这样策略的服务器, 白名单策略使得服务器成功躲过了 GFW 的封禁. 这种策略易于部署, 适用于任何服务器和翻墙协议 (实验中我们尝试了 SS, SSR 和 MTProto), 而且通过巧妙的设计可以不增加用户的负担.
**白名单策略**
白名单策略是指, 我们通过数据过滤防火墙, 只允许服务器接收特定 IP 来源的入站流量, 而拒绝所有别的流量. 具体而言, 我们 Setup 了两种服务器, 主服务器和子节点: 主服务器负责联络所有的子节点, 子节点负责给用户提供翻墙服务. 用户在翻墙前通过主节点记录自己的 IP, 主节点会把 IP 广播给所有的子节点, 从而把这个特定 IP 加入到白名单中. 这样我们就可以成功避开防火墙的探测.
但是这样操作会给用户带来不必要的负担. 用户的网络环境可能很复杂; 宽带的每次重新拨号, 从 WiFi 环境过度到蜂窝网, 或者在蜂窝网的不同基站之间穿梭都可能会导致 IP 的变化, 从而无法被服务器识别. 为了减轻用户的负担, 我们把 IP 注册功能和 SSR 的订阅更新功能绑定. 用户每次向 SSR 服务器请求订阅列表的时候, 我们会抽取用户的 IP, 然后广播到所有子节点上. 这样的策略大大减轻了用户的操作负担.
简单地丢弃所有入站数据包未免过于粗糙. 事实上我们可以有更灵活的防火墙策略.  经过研究我们发现, 被 GFW 用作主动探测的服务器全部都是 Linux 服务器, 而很多用户使用的操作系统是 Windows. Windows 发出的数据包区别于 Linux 的一大特征是, Windows  数据包的起始 TTL 是 128, 而 Linux 则是 64. 所以一个简单的思路就是, 我们可以无条件信任 TTL 大于 64 的数据包 (考虑到用户到服务器之间的距离不太可能超过 64 跳). 这样 Windows 用户就可以不被防火墙影响.
实践中我们还发现开放 22 端口和接受 ICMP 包并不会导致服务器被墙. 为了避免开启防火墙导致失联, 我们可以考虑开放 ICMP 协议和 22 端口.
**实验结果**
- 服务器的生存挑战
我们在我们运营的 SSR 机场的服务器上全部部署了防火墙, 并使用上述策略更新防火墙的白名单. 我们进行了为期   18 天的实验. 在实验中, 所有服务器都没有被墙 (除了一次意外撤除防火墙的事件). 这些服务器工作在 163 线路, CN2 GT 线路和 CN2 GIA 线路. 但是为了保护我们自己的安全, 我们不能公布实验的具体规模.
为了对比, 我们尝试性撤除 4 台服务器的防火墙, 在这几次实验中, 这些服务器在数分钟到一小时之内都被迅速封禁. 这进一步证明了白名单防火墙确实是保护服务器的主要因素.
除了 SSR, 我们还测试了 MTProto 协议. MTProto 是一个早就证明被特征识别的协议. 实验证明, 这样的策略同样可以保护 MTProto. 实验中我们部署了 4 台服务器, 设有保护的两台服务器一直生存至今, 而没有部署防火墙的两台服务器分别在第 20 分钟和第一小时被封禁. 这个实验再次印证了主动探测是墙封禁服务器的必要条件, 即使这个协议早已被特征识别.
- 探测数据包的分析
关于探测数据包的分析, [这篇文章]([https://gfw.report/blog/gfw_shadowsocks/zh.html](jump-to.php?url=https%3A%2F%2Fgfw.report%2Fblog%2Fgfw_shadowsocks%2Fzh.html)) 已经有较为透彻的分析. 这里我们再次印证了它的一部分结论, 并有小部分新的发现. 我们主要有以下发现:
1. GFW 探测服务器的源地址处于电信和联通网络, 以联通骨干网为主.
2. 探测数据包的 TTL 全部小于 64.
3. 只要有 Shadowsocks 流量记录, 墙会把各种可能的翻墙协议全部探测一次, 包括古老的已经不再适用的协议.
4. 没有流量记录的端口, 即使在运行 Shadowsocks, 墙也不会探测, 即它不会穷举各种端口.
5. 墙会用很多地址探测服务器, 但每个地址只会探测一个端口.
6. 墙对 Shadowsocks 端口的探测频率大约是 10 分钟一次, 探测的概率和这个端口的流量大致呈正比关系, 但是也有一些端口从来没有被探测过 -- 我们并不知道为什么.
7. 每一次探测会持续数分钟, 之后墙不会发起同样的探测.
**具体配置方案**
我们使用的工具是 iptables. 我们假设用户的 IP 是 1.2.3.4, 具体的配置方案是
 iptables -A INPUT -m ttl --ttl-gt 80 -j ACCEPT iptables -A INPUT -p icmp -j ACCEPT iptables _A INPUT -p tcp --dport 22 -j ACCEPT iptables -A INPUT -i lo -j ACCEPT iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT iptables -A INPUT -s 1.2.3.4 -j ACCEPT iptables -P INPUT DROP

#p 22324425 shanking Tick-Tock 2020-05-01 19:45:48
感谢lz分享经验！但有个小小的疑问，按照您给的代码复制到终端执行后，防火墙貌似已经生效。但是重启后设好的规则又好像失效了。小白实在搞不明白（捂脸
#quote hiaoxui

#p 22324457 karlmarx 还我三角地！灵均·六月雪 2020-05-01 19:51:48
[https://blog.csdn.net/donglynn/article/details/73530542](jump-to.php?url=https%3A%2F%2Fblog.csdn.net%2Fdonglynn%2Farticle%2Fdetails%2F73530542)
#quote shanking

#p 22324492 karlmarx 还我三角地！灵均·六月雪 2020-05-01 20:00:08
赞
#quote hiaoxui

#p 22324577 shanking Tick-Tock 2020-05-01 20:27:53
哇可以了。非常感谢！
#quote karlmarx

#p 22324732 jinzijie qcr775 2020-05-01 21:24:17
超级赞
#quote hiaoxui

#p 22325055 CoreM AMDYES 2020-05-01 23:14:42
简单粗暴，道高一尺，魔高一丈！
#quote hiaoxui

#p 22325138 Hotarubi 是扇底闪躲|或雨水摧折 2020-05-01 23:41:08
太强了！
建议发ycf
#quote hiaoxui

#p 22325177 siscon 实妹什么的最棒了！ 2020-05-01 23:53:43
感谢楼主分享。我在亚马逊的服务器分分钟被封，不知能不能解决。。。回头再研究
#quote hiaoxui

#p 22325193 juruo 蒟蒻太蒻了嘤嘤嘤 2020-05-01 23:59:13
赞！
#quote hiaoxui

#p 22325291 IlIl 王铁牙 2020-05-02 22:10:21


2020-05-02 00:25:24
感谢楼主的无私分享。
我也分享几个ipv6屏蔽的网段，虽然目前ipv6还没有部署封锁，但是嗅探的活动一直存在，但是嗅探的机器基本上都是用的本机直接访问，IP地址相对固定。目前加了这几个屏蔽之后基本上就没有再受到过来自ipv6的嗅探。
DROP       all      2409:8880:3e01::/48  anywhere            
DROP       all      2400:dd0d::/32       anywhere            
DROP       all      2408:8648::/32       anywhere            
DROP       all      2409:8714::/36       anywhere            
DROP       all      2409:8880::/32       anywhere            
DROP       all      240e:58::/32         anywhere            
DROP       all      2408:8000:1000::/36  anywhere            
DROP       all      2001:da8:20b::/48    anywhere   ﻿
查询这些网段的归属可以用这个网站 [https://ip.zxinc.org/ipquery/](jump-to.php?url=https%3A%2F%2Fip.zxinc.org%2Fipquery%2F)
#quote hiaoxui

#p 22325488 eurekayang eureka 2020-05-02 01:48:15
感谢
#quote hiaoxui

#p 22326165 mobneufx 蘑簿鹫岔 2020-05-02 10:08:02
tql!
#quote hiaoxui

#p 22329435 RyanBern r.bern 2020-05-02 14:20:38
感谢楼主详细的测试，白名单制度看起来确实是有效的。我自己的话搭的是 ss-libev，目前貌似没有订阅功能，可能需要点额外工作量来减少用户使用的麻烦。
另外有几点细节想跟楼主讨论一下：
1. TTL 这个设置是否必要？
根据楼主观察，用于主动嗅探的服务器大多为 Linux，而 Linux 发包的 TTL 是 64。但据我所知默认 TTL 是可以修改的，例如：
[https://askubuntu.com/questions/667096/how-to-change-the-default-ttl-of-tcp-ip-packets](jump-to.php?url=https%3A%2F%2Faskubuntu.com%2Fquestions%2F667096%2Fhow-to-change-the-default-ttl-of-tcp-ip-packets)
而且修改成本很低（只需要改一个内核参数），不知楼主有没有测试过 Linux 客户端修改 TTL 之后再连接你的 ssr 服务器（看样子是能直连的，无需注册 IP）。如果这种技术普及的话不太清楚 GFW 会不会出针对措施。另外根据描述，TTL 这个设置实际上就是无条件放行 windows 客户端，如果白名单处理完善的话，好像给 windows 用户开特权不是很必要？
2. 防火墙配置？
目前防火墙是用的 iptables 方式处理的。iptables 可能有些老了（例如 CentOS 8 已经改成 firewalld + nftables 了），如果可能的话是否能提供一个 firewalld 的版本？另外个人建议搞一个 ipset 来维护白名单列表，目前的话是对 iptables 逐条插入，iptables 是线性判断的，列表长了以后由于需要逐个判断，效率不会太高。
3. ss 服务器遭封禁频率？
看楼主和版面上大多版友的描述貌似 ss 服务器开启后一小时就会被封禁。但好像并不总是这样？我这边的话有三台 ss 服务器（没有配置任何混淆，使用 AEAD 加密），大约有 30 人在用。服务器搭建有三年了，只在去年 9 月左右（敏感时期）被封过一段时间，此外似乎一切正常。想问下楼主这个封禁频率大概和什么因素有关？
#quote hiaoxui

#p 22329575 crux L 2020-05-02 15:11:56
写出来不怕贵站有内鬼吗？
#quote hiaoxui

#p 22330170 karlmarx 还我三角地！灵均·六月雪 2020-05-02 19:00:24
似乎AEAD加密的目前还不容易被封？
#quote siscon

#p 22330409 Mocambique Jaziel 2020-05-02 20:31:46
太墙了！墙都变成一个研究课题了...
#quote hiaoxui

#p 22330474 BeyonceB Love&peace 2020-05-02 20:46:14
电脑小白真的是觉得好晕。。但是谢谢楼主
#quote hiaoxui

#p 22330811 crespo 米奇 2020-05-02 22:00:54
更新成订阅模式之后用了几天，今晚突然又不行了。。感谢楼主发文，但电脑小白尴尬的表示没看懂。。
#quote hiaoxui

#p 22331710 hiaoxui 小辉 2020-05-03 01:22:04
感谢! 我也有朋友跟我反馈说收到墙的 IPv6 探测. 同样我现在也没有遇到过 IPv6 封锁.
#quote IlIl

#p 22331726 hiaoxui 小辉 2020-05-03 01:32:40
1. 这是一个很好的点. 我日常使用的操作系统是 Linux, 所以我都是直接改系统的 TTL 来绕过防火墙. 
TTL 不是长久之计. 我觉得翻墙阵营和墙之间是敌暗我明的关系, 我们的协议对他们而言都是透明的. 我设置 TTL 只是因为墙还没有针对我这种小规模的实验调整自己的工作策略. 如果大家都用白名单来对抗主动探测, 那么 TTL 也自然会失效.
换言之, 这只是权益之计, 而不是一个长期安全的策略.
2. 我朋友建议我更换 IPSet 来提高效率, 不过我有点懒一直没有动手.. 我看了看论坛的讨论, 似乎 iptables 在数万条以内工作效率还是挺高的. 感谢你的建议.
firewalld 我还真不会用. iptables 非常原始而且很不好用, 不过我想也正是因为它比较接近于系统底层, 所以功能才比较丰富.
3. 我目前为止没有测试不同协议的区别, 不过我发现的是家宽更容易被探测, 而我们一直在使用的一台阿里云就没有问题 (这台阿里云使用的 ss 端口并没有被主动探测). 我之前没有用订阅模式, 所以给用户更换协议不是很方便.
#quote RyanBern

#p 22331737 hiaoxui 小辉 2020-05-03 01:39:21
我写出来就不怕被 GFW 的人看到. 和 GFW 的斗争永远是敌暗我明; 除非你打算小范围内使用, 否则就必须开源.
#quote crux

#p 22331744 hiaoxui 小辉 2020-05-03 01:41:56
ORZ
#quote Mocambique

#p 22331745 hiaoxui 小辉 2020-05-03 01:42:15
可以直接联系我 wallesspku@hotmail.com
#quote crespo

#p 22332319 euio 耳目一心 2020-05-03 09:37:09


2020-05-03 09:36:36
向HR致敬！
    eo
#quote hiaoxui

#p 22332705 jacobanach 整活了 2020-05-03 11:06:13
这就叫魔高一尺道高一丈
#quote hiaoxui

